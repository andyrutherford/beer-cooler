{"ast":null,"code":"import { GET_PROFILE, CLEAR_PROFILE, PROFILE_ERROR, UPDATE_ADDRESS, UPDATE_PAYMENT } from '../actions/types';\nconst initialState = {\n  address: {\n    fullName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    postCode: '',\n    country: ''\n  },\n  payment: {\n    cardName: '',\n    cardNumber: '',\n    expMonth: '',\n    expYear: ''\n  },\n  loading: true,\n  error: {},\n  cooler: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      {\n        return { ...state,\n          address: action.payload.address ? action.payload.address : {},\n          cooler: action.payload.cooler ? action.payload.cooler : [],\n          payment: action.payload.payment ? action.payload.payment : {},\n          loading: false\n        };\n      }\n\n    case UPDATE_ADDRESS:\n      {\n        return { ...state,\n          address: action.payload\n        };\n      }\n\n    case PROFILE_ERROR:\n      {\n        return { ...state,\n          error: action.payload\n        };\n      }\n\n    case CLEAR_PROFILE:\n      {\n        return { ...state,\n          address: {\n            fullName: '',\n            address1: '',\n            address2: '',\n            city: '',\n            state: '',\n            postCode: '',\n            country: ''\n          },\n          payment: {\n            cardName: '',\n            cardNumber: '',\n            expMonth: '',\n            expYear: ''\n          },\n          error: {},\n          loading: false,\n          cooler: []\n        };\n      }\n\n    case UPDATE_PAYMENT:\n      {\n        return { ...state,\n          payment: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/reducers/profile-reducer.js"],"names":["GET_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","UPDATE_ADDRESS","UPDATE_PAYMENT","initialState","address","fullName","address1","address2","city","state","postCode","country","payment","cardName","cardNumber","expMonth","expYear","loading","error","cooler","action","type","payload"],"mappings":"AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,cALF,QAMO,kBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,IAAI,EAAE,EAJC;AAKPC,IAAAA,KAAK,EAAE,EALA;AAMPC,IAAAA,QAAQ,EAAE,EANH;AAOPC,IAAAA,OAAO,EAAE;AAPF,GADU;AAUnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,OAAO,EAAE;AAJF,GAVU;AAgBnBC,EAAAA,OAAO,EAAE,IAhBU;AAiBnBC,EAAAA,KAAK,EAAE,EAjBY;AAkBnBC,EAAAA,MAAM,EAAE;AAlBW,CAArB;AAqBA,eAAe,UAAUV,KAAK,GAAGN,YAAlB,EAAgCiB,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGW,KADE;AAELL,UAAAA,OAAO,EAAEgB,MAAM,CAACE,OAAP,CAAelB,OAAf,GAAyBgB,MAAM,CAACE,OAAP,CAAelB,OAAxC,GAAkD,EAFtD;AAGLe,UAAAA,MAAM,EAAEC,MAAM,CAACE,OAAP,CAAeH,MAAf,GAAwBC,MAAM,CAACE,OAAP,CAAeH,MAAvC,GAAgD,EAHnD;AAILP,UAAAA,OAAO,EAAEQ,MAAM,CAACE,OAAP,CAAeV,OAAf,GAAyBQ,MAAM,CAACE,OAAP,CAAeV,OAAxC,GAAkD,EAJtD;AAKLK,UAAAA,OAAO,EAAE;AALJ,SAAP;AAOD;;AACD,SAAKhB,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGQ,KADE;AAELL,UAAAA,OAAO,EAAEgB,MAAM,CAACE;AAFX,SAAP;AAID;;AACD,SAAKtB,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGS,KADE;AAELS,UAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,SAAP;AAID;;AACD,SAAKvB,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGU,KADE;AAELL,UAAAA,OAAO,EAAE;AACPC,YAAAA,QAAQ,EAAE,EADH;AAEPC,YAAAA,QAAQ,EAAE,EAFH;AAGPC,YAAAA,QAAQ,EAAE,EAHH;AAIPC,YAAAA,IAAI,EAAE,EAJC;AAKPC,YAAAA,KAAK,EAAE,EALA;AAMPC,YAAAA,QAAQ,EAAE,EANH;AAOPC,YAAAA,OAAO,EAAE;AAPF,WAFJ;AAWLC,UAAAA,OAAO,EAAE;AACPC,YAAAA,QAAQ,EAAE,EADH;AAEPC,YAAAA,UAAU,EAAE,EAFL;AAGPC,YAAAA,QAAQ,EAAE,EAHH;AAIPC,YAAAA,OAAO,EAAE;AAJF,WAXJ;AAiBLE,UAAAA,KAAK,EAAE,EAjBF;AAkBLD,UAAAA,OAAO,EAAE,KAlBJ;AAmBLE,UAAAA,MAAM,EAAE;AAnBH,SAAP;AAqBD;;AACD,SAAKjB,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGO,KADE;AAELG,UAAAA,OAAO,EAAEQ,MAAM,CAACE;AAFX,SAAP;AAID;;AACD;AACE,aAAOb,KAAP;AApDJ;AAsDD","sourcesContent":["import {\n  GET_PROFILE,\n  CLEAR_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_ADDRESS,\n  UPDATE_PAYMENT,\n} from '../actions/types';\n\nconst initialState = {\n  address: {\n    fullName: '',\n    address1: '',\n    address2: '',\n    city: '',\n    state: '',\n    postCode: '',\n    country: '',\n  },\n  payment: {\n    cardName: '',\n    cardNumber: '',\n    expMonth: '',\n    expYear: '',\n  },\n  loading: true,\n  error: {},\n  cooler: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE: {\n      return {\n        ...state,\n        address: action.payload.address ? action.payload.address : {},\n        cooler: action.payload.cooler ? action.payload.cooler : [],\n        payment: action.payload.payment ? action.payload.payment : {},\n        loading: false,\n      };\n    }\n    case UPDATE_ADDRESS: {\n      return {\n        ...state,\n        address: action.payload,\n      };\n    }\n    case PROFILE_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case CLEAR_PROFILE: {\n      return {\n        ...state,\n        address: {\n          fullName: '',\n          address1: '',\n          address2: '',\n          city: '',\n          state: '',\n          postCode: '',\n          country: '',\n        },\n        payment: {\n          cardName: '',\n          cardNumber: '',\n          expMonth: '',\n          expYear: '',\n        },\n        error: {},\n        loading: false,\n        cooler: [],\n      };\n    }\n    case UPDATE_PAYMENT: {\n      return {\n        ...state,\n        payment: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}