{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert-action';\nimport { GET_PROFILE, PROFILE_ERROR, COOLER_ADDRESS_VALID, COOLER_PAYMENT_VALID, UPDATE_ADDRESS, UPDATE_PAYMENT } from './types';\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await api.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data.profile\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.message\n    });\n  }\n};\nexport const updateAddress = (addressData, guest) => async dispatch => {\n  if (guest) {\n    dispatch({\n      type: COOLER_ADDRESS_VALID\n    });\n    dispatch(setAlert('Your address has been confirmed.'));\n    return dispatch({\n      type: UPDATE_ADDRESS,\n      payload: addressData\n    });\n  }\n\n  try {\n    const res = await api.post('/profile/address', addressData);\n    dispatch({\n      type: UPDATE_ADDRESS,\n      payload: res.data.profile.address\n    });\n    dispatch({\n      type: COOLER_ADDRESS_VALID\n    });\n    dispatch(setAlert('Your address has been confirmed.'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.message\n    });\n  }\n};\nexport const savePayment = (paymentData, guest) => async dispatch => {\n  paymentData.cardNumber = 'XXXXXXXXXXXX' + paymentData.cardNumber.slice(12, 16);\n\n  if (guest) {\n    dispatch({\n      type: COOLER_PAYMENT_VALID\n    });\n    dispatch(setAlert('Your payment method has been confirmed.'));\n    return dispatch({\n      type: UPDATE_PAYMENT,\n      payload: paymentData\n    });\n  }\n\n  try {\n    const res = await api.post('/profile/payment', paymentData);\n    dispatch({\n      type: UPDATE_PAYMENT,\n      payload: res.data.profile.payment\n    });\n    dispatch({\n      type: COOLER_PAYMENT_VALID\n    });\n    dispatch(setAlert('Your payment method has been confirmed.'));\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/actions/profile-action.js"],"names":["api","setAlert","GET_PROFILE","PROFILE_ERROR","COOLER_ADDRESS_VALID","COOLER_PAYMENT_VALID","UPDATE_ADDRESS","UPDATE_PAYMENT","getCurrentProfile","dispatch","res","get","type","payload","data","profile","error","message","updateAddress","addressData","guest","post","address","savePayment","paymentData","cardNumber","slice","payment","console","log"],"mappings":"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","sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert-action';\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  COOLER_ADDRESS_VALID,\n  COOLER_PAYMENT_VALID,\n  UPDATE_ADDRESS,\n  UPDATE_PAYMENT,\n} from './types';\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data.profile,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.message,\n    });\n  }\n};\n\nexport const updateAddress = (addressData, guest) => async (dispatch) => {\n  if (guest) {\n    dispatch({ type: COOLER_ADDRESS_VALID });\n    dispatch(setAlert('Your address has been confirmed.'));\n    return dispatch({\n      type: UPDATE_ADDRESS,\n      payload: addressData,\n    });\n  }\n  try {\n    const res = await api.post('/profile/address', addressData);\n    dispatch({\n      type: UPDATE_ADDRESS,\n      payload: res.data.profile.address,\n    });\n    dispatch({ type: COOLER_ADDRESS_VALID });\n    dispatch(setAlert('Your address has been confirmed.'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.message,\n    });\n  }\n};\n\nexport const savePayment = (paymentData, guest) => async (dispatch) => {\n  paymentData.cardNumber =\n    'XXXXXXXXXXXX' + paymentData.cardNumber.slice(12, 16);\n\n  if (guest) {\n    dispatch({ type: COOLER_PAYMENT_VALID });\n    dispatch(setAlert('Your payment method has been confirmed.'));\n    return dispatch({\n      type: UPDATE_PAYMENT,\n      payload: paymentData,\n    });\n  }\n\n  try {\n    const res = await api.post('/profile/payment', paymentData);\n    dispatch({\n      type: UPDATE_PAYMENT,\n      payload: res.data.profile.payment,\n    });\n    dispatch({ type: COOLER_PAYMENT_VALID });\n    dispatch(setAlert('Your payment method has been confirmed.'));\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}