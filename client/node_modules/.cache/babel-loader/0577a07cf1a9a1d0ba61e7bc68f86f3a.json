{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Projects/beer-cooler-merged/client/src/components/profile/forgotPassword/ResetPassword.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport const ResetPassword = ({\n  match\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    updated: false,\n    isLoading: true,\n    tokenError: false,\n    error: ''\n  });\n  useEffect(() => {\n    const requestReset = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/password/reset', {\n          params: {\n            resetPasswordToken: match.params.token\n          }\n        });\n\n        if (res.data.message === 'password reset successful') {\n          setFormData({ ...formData,\n            email: res.data.email,\n            updated: false,\n            isLoading: false,\n            error: false\n          });\n        } else {\n          setFormData({ ...formData,\n            updated: false,\n            isLoading: false,\n            error: true\n          });\n        }\n      } catch (error) {\n        console.log(error.data);\n      }\n    };\n\n    requestReset(); //eslint-disable-next-line\n  }, []);\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const updatePassword = async e => {\n    e.preventDefault();\n    setFormData({ ...formData,\n      error: ''\n    });\n\n    if (formData.password === '' || formData.confirmPassword === '') {\n      return setFormData({ ...formData,\n        error: 'Both password fields are required.'\n      });\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      return setFormData({ ...formData,\n        error: 'The passwords do not match.'\n      });\n    }\n\n    try {\n      const res = await axios.put('http://localhost:3000/password/update', {\n        email: formData.email,\n        password: formData.password\n      });\n\n      if (res.data.message === 'password updated') {\n        setFormData({ ...formData,\n          updated: true,\n          error: false\n        });\n      } else {\n        setFormData({ ...formData,\n          updated: false,\n          error: true\n        });\n      }\n    } catch (error) {\n      console.log(error.data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-unlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), \" Reset your password\", ' '), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), formData.tokenError || formData.error ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"A problem occurred. Please request a new password\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"here\"), \".\") : formData.updated ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Your password has been reset.\") : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: updatePassword,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Please create a new password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control mb-2\",\n    name: \"password\",\n    onChange: onChange,\n    value: formData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Your password must contain a minimum of 6 characters.\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Confirm password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control mb-2\",\n    name: \"confirmPassword\",\n    onChange: onChange,\n    value: formData.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), formData.error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 30\n    }\n  }, formData.error), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-default mb-1 ml-3\",\n    onClick: () => setFormData({ ...formData,\n      error: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Reset\")));\n};\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/components/profile/forgotPassword/ResetPassword.js"],"names":["React","useState","useEffect","Link","axios","ResetPassword","match","formData","setFormData","email","password","confirmPassword","updated","isLoading","tokenError","error","requestReset","res","get","params","resetPasswordToken","token","data","message","console","log","onChange","e","target","name","value","updatePassword","preventDefault","put"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,eAAe,EAAE,EAHsB;AAIvCC,IAAAA,OAAO,EAAE,KAJ8B;AAKvCC,IAAAA,SAAS,EAAE,IAL4B;AAMvCC,IAAAA,UAAU,EAAE,KAN2B;AAOvCC,IAAAA,KAAK,EAAE;AAPgC,GAAD,CAAxC;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,YAAY,GAAG,YAAY;AAC/B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,sCAAV,EAAkD;AAClEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,kBAAkB,EAAEd,KAAK,CAACa,MAAN,CAAaE;AAD3B;AAD0D,SAAlD,CAAlB;;AAMA,YAAIJ,GAAG,CAACK,IAAJ,CAASC,OAAT,KAAqB,2BAAzB,EAAsD;AACpDf,UAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,YAAAA,KAAK,EAAEQ,GAAG,CAACK,IAAJ,CAASb,KAFN;AAGVG,YAAAA,OAAO,EAAE,KAHC;AAIVC,YAAAA,SAAS,EAAE,KAJD;AAKVE,YAAAA,KAAK,EAAE;AALG,WAAD,CAAX;AAOD,SARD,MAQO;AACLP,UAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVK,YAAAA,OAAO,EAAE,KAFC;AAGVC,YAAAA,SAAS,EAAE,KAHD;AAIVE,YAAAA,KAAK,EAAE;AAJG,WAAD,CAAX;AAMD;AACF,OAvBD,CAuBE,OAAOA,KAAP,EAAc;AACdS,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,IAAlB;AACD;AACF,KA3BD;;AA4BAN,IAAAA,YAAY,GA7BE,CA8Bd;AACD,GA/BQ,EA+BN,EA/BM,CAAT;;AAiCA,QAAMU,QAAQ,GAAIC,CAAD,IAAO;AACtBnB,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACoB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFhB,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,cAAc,GAAG,MAAOJ,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACK,cAAF;AACAxB,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVQ,MAAAA,KAAK,EAAE;AAFG,KAAD,CAAX;;AAIA,QAAIR,QAAQ,CAACG,QAAT,KAAsB,EAAtB,IAA4BH,QAAQ,CAACI,eAAT,KAA6B,EAA7D,EAAiE;AAC/D,aAAOH,WAAW,CAAC,EACjB,GAAGD,QADc;AAEjBQ,QAAAA,KAAK,EAAE;AAFU,OAAD,CAAlB;AAID;;AAED,QAAIR,QAAQ,CAACG,QAAT,KAAsBH,QAAQ,CAACI,eAAnC,EAAoD;AAClD,aAAOH,WAAW,CAAC,EACjB,GAAGD,QADc;AAEjBQ,QAAAA,KAAK,EAAE;AAFU,OAAD,CAAlB;AAID;;AAED,QAAI;AACF,YAAME,GAAG,GAAG,MAAMb,KAAK,CAAC6B,GAAN,CAAU,uCAAV,EAAmD;AACnExB,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KADmD;AAEnEC,QAAAA,QAAQ,EAAEH,QAAQ,CAACG;AAFgD,OAAnD,CAAlB;;AAKA,UAAIO,GAAG,CAACK,IAAJ,CAASC,OAAT,KAAqB,kBAAzB,EAA6C;AAC3Cf,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVK,UAAAA,OAAO,EAAE,IAFC;AAGVG,UAAAA,KAAK,EAAE;AAHG,SAAD,CAAX;AAKD,OAND,MAMO;AACLP,QAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVK,UAAAA,OAAO,EAAE,KAFC;AAGVG,UAAAA,KAAK,EAAE;AAHG,SAAD,CAAX;AAKD;AACF,KAnBD,CAmBE,OAAOA,KAAP,EAAc;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACO,IAAlB;AACD;AACF,GA1CD;;AA4CA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,0BACwD,GADxD,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGf,QAAQ,CAACO,UAAT,IAAuBP,QAAQ,CAACQ,KAAhC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DACoD,GADpD,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,MADD,GAKGR,QAAQ,CAACK,OAAT,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADE,gBAGF;AAAM,IAAA,QAAQ,EAAEmB,cAAhB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAGE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAEL,QAJZ;AAKE,IAAA,KAAK,EAAEnB,QAAQ,CAACG,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAUE;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAVF,eAaE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbF,eAcE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,IAAI,EAAC,iBAHP;AAIE,IAAA,QAAQ,EAAEgB,QAJZ;AAKE,IAAA,KAAK,EAAEnB,QAAQ,CAACI,eALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,EAuBGJ,QAAQ,CAACQ,KAAT,iBAAkB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,QAAQ,CAACQ,KAArC,CAvBrB,eAwBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eA2BE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,2BAFZ;AAGE,IAAA,OAAO,EAAE,MAAMP,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeQ,MAAAA,KAAK,EAAE;AAAtB,KAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3BF,CAbJ,CADF;AAoDD,CAnJM;AAqJP,eAAeV,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nexport const ResetPassword = ({ match }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    updated: false,\n    isLoading: true,\n    tokenError: false,\n    error: '',\n  });\n\n  useEffect(() => {\n    const requestReset = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/password/reset', {\n          params: {\n            resetPasswordToken: match.params.token,\n          },\n        });\n\n        if (res.data.message === 'password reset successful') {\n          setFormData({\n            ...formData,\n            email: res.data.email,\n            updated: false,\n            isLoading: false,\n            error: false,\n          });\n        } else {\n          setFormData({\n            ...formData,\n            updated: false,\n            isLoading: false,\n            error: true,\n          });\n        }\n      } catch (error) {\n        console.log(error.data);\n      }\n    };\n    requestReset();\n    //eslint-disable-next-line\n  }, []);\n\n  const onChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const updatePassword = async (e) => {\n    e.preventDefault();\n    setFormData({\n      ...formData,\n      error: '',\n    });\n    if (formData.password === '' || formData.confirmPassword === '') {\n      return setFormData({\n        ...formData,\n        error: 'Both password fields are required.',\n      });\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      return setFormData({\n        ...formData,\n        error: 'The passwords do not match.',\n      });\n    }\n\n    try {\n      const res = await axios.put('http://localhost:3000/password/update', {\n        email: formData.email,\n        password: formData.password,\n      });\n\n      if (res.data.message === 'password updated') {\n        setFormData({\n          ...formData,\n          updated: true,\n          error: false,\n        });\n      } else {\n        setFormData({\n          ...formData,\n          updated: false,\n          error: true,\n        });\n      }\n    } catch (error) {\n      console.log(error.data);\n    }\n  };\n\n  return (\n    <div className='login-form'>\n      <h1>\n        <i className='fas fa-unlock'></i> Reset your password{' '}\n      </h1>\n      <hr />\n      {formData.tokenError || formData.error ? (\n        <p>\n          A problem occurred. Please request a new password{' '}\n          <Link to='/forgot_password'>here</Link>.\n        </p>\n      ) : formData.updated ? (\n        <p>Your password has been reset.</p>\n      ) : (\n        <form onSubmit={updatePassword} className='mb-2'>\n          <div className='form-group'>\n            <label>Please create a new password:</label>\n\n            <input\n              type='password'\n              className='form-control mb-2'\n              name='password'\n              onChange={onChange}\n              value={formData.password}\n            />\n            <small className='form-text text-muted'>\n              Your password must contain a minimum of 6 characters.\n            </small>\n            <label className='mt-2'>Confirm password:</label>\n            <input\n              type='password'\n              className='form-control mb-2'\n              name='confirmPassword'\n              onChange={onChange}\n              value={formData.confirmPassword}\n            />\n          </div>\n          {formData.error && <p className='text-danger'>{formData.error}</p>}\n          <button type='submit' className='btn btn-primary mb-1'>\n            Submit\n          </button>\n          <button\n            type='reset'\n            className='btn btn-default mb-1 ml-3'\n            onClick={() => setFormData({ ...formData, error: '' })}\n          >\n            Reset\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}