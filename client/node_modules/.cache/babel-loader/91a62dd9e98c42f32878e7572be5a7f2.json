{"ast":null,"code":"import { setAlert } from './alert-action';\nimport { clearCoolerLogout, getCooler } from './cooler-action';\nimport { getCurrentProfile } from './profile-action';\nimport api from '../utils/api';\nimport { USER_LOADED, AUTH_ERROR, SIGNUP_USER, LOGIN_USER, COOLER_CHECKOUT_AS_MEMBER, LOGIN_USER_ERROR, LOGOUT_USER, CLEAR_PROFILE, CLEAR_ORDERS, PASSWORD_CHANGE_SUCCESS, DELETE_USER } from './types';\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    dispatch(getCooler());\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const signupUser = userData => async dispatch => {\n  try {\n    const res = await api.post('/auth/signup', userData, config); // const createProfile = await api.post('/profile');\n    // console.log(createProfile.data);\n\n    dispatch({\n      type: SIGNUP_USER,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    dispatch(setAlert(error.response.data.error));\n  }\n};\nexport const loginUser = userData => async dispatch => {\n  try {\n    const res = await api.post('/auth/login', userData, config);\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data\n    });\n    dispatch({\n      type: COOLER_CHECKOUT_AS_MEMBER\n    });\n    dispatch(loadUser());\n    dispatch(getCurrentProfile());\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LOGIN_USER_ERROR\n    });\n    dispatch(setAlert(error.response.data.error));\n  }\n};\nexport const logoutUser = () => dispatch => {\n  dispatch({\n    type: LOGOUT_USER\n  });\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: CLEAR_ORDERS\n  });\n  dispatch(clearCoolerLogout());\n  dispatch(setAlert('You have successfully logged out.'));\n};\nexport const changePassword = userData => async dispatch => {\n  try {\n    const res = await api.put('/auth', userData);\n    dispatch({\n      type: PASSWORD_CHANGE_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert(res.data.msg));\n  } catch (error) {\n    dispatch(setAlert(error.response.data.error));\n  }\n};\nexport const deleteUser = () => async dispatch => {\n  if (window.confirm('Are you sure?  This cannot be undone.')) {\n    try {\n      await api.delete('/auth');\n      dispatch({\n        type: DELETE_USER\n      });\n      dispatch(setAlert('Your account has been successfully deleted.'));\n    } catch (error) {\n      dispatch(setAlert(error.response.data.error));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/actions/auth-action.js"],"names":["setAlert","clearCoolerLogout","getCooler","getCurrentProfile","api","USER_LOADED","AUTH_ERROR","SIGNUP_USER","LOGIN_USER","COOLER_CHECKOUT_AS_MEMBER","LOGIN_USER_ERROR","LOGOUT_USER","CLEAR_PROFILE","CLEAR_ORDERS","PASSWORD_CHANGE_SUCCESS","DELETE_USER","config","headers","loadUser","dispatch","res","get","type","payload","data","error","signupUser","userData","post","response","loginUser","console","log","logoutUser","changePassword","put","msg","deleteUser","window","confirm","delete"],"mappings":"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","sourcesContent":["import { setAlert } from './alert-action';\nimport { clearCoolerLogout, getCooler } from './cooler-action';\nimport { getCurrentProfile } from './profile-action';\nimport api from '../utils/api';\n\nimport {\n  USER_LOADED,\n  AUTH_ERROR,\n  SIGNUP_USER,\n  LOGIN_USER,\n  COOLER_CHECKOUT_AS_MEMBER,\n  LOGIN_USER_ERROR,\n  LOGOUT_USER,\n  CLEAR_PROFILE,\n  CLEAR_ORDERS,\n  PASSWORD_CHANGE_SUCCESS,\n  DELETE_USER,\n} from './types';\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await api.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n    dispatch(getCooler());\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const signupUser = (userData) => async (dispatch) => {\n  try {\n    const res = await api.post('/auth/signup', userData, config);\n    // const createProfile = await api.post('/profile');\n    // console.log(createProfile.data);\n    dispatch({\n      type: SIGNUP_USER,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n\n    dispatch(setAlert(error.response.data.error));\n  }\n};\n\nexport const loginUser = (userData) => async (dispatch) => {\n  try {\n    const res = await api.post('/auth/login', userData, config);\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data,\n    });\n    dispatch({\n      type: COOLER_CHECKOUT_AS_MEMBER,\n    });\n    dispatch(loadUser());\n    dispatch(getCurrentProfile());\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LOGIN_USER_ERROR,\n    });\n    dispatch(setAlert(error.response.data.error));\n  }\n};\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch({\n    type: LOGOUT_USER,\n  });\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: CLEAR_ORDERS });\n  dispatch(clearCoolerLogout());\n\n  dispatch(setAlert('You have successfully logged out.'));\n};\n\nexport const changePassword = (userData) => async (dispatch) => {\n  try {\n    const res = await api.put('/auth', userData);\n    dispatch({\n      type: PASSWORD_CHANGE_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(setAlert(res.data.msg));\n  } catch (error) {\n    dispatch(setAlert(error.response.data.error));\n  }\n};\n\nexport const deleteUser = () => async (dispatch) => {\n  if (window.confirm('Are you sure?  This cannot be undone.')) {\n    try {\n      await api.delete('/auth');\n      dispatch({\n        type: DELETE_USER,\n      });\n      dispatch(setAlert('Your account has been successfully deleted.'));\n    } catch (error) {\n      dispatch(setAlert(error.response.data.error));\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}