{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Projects/beer-cooler-merged/client/src/components/profile/forgotPassword/ForgotPassword.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const onChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError();\n\n    if (email === '') {\n      setLoading(false);\n      return setError('Please enter a valid email.');\n    } else {\n      try {\n        const res = await axios.post('http://localhost:3000/password/forgot', {\n          email\n        });\n\n        if (res.data === 'no user found') {\n          setLoading(false);\n          setError('An account was not found with the provided email.');\n        } else if (res.data === 'recovery email sent') {\n          setLoading(false);\n          setSuccess(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        console.log(error.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-unlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), \" Reset your password\", ' '), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), success ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Please check your email for further instructions on how to reset your password. If you don't see it, check your Spam folder.\") : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"We will send you an email with instructions on how to reset your password.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control mb-2\",\n    name: \"email\",\n    onChange: onChange,\n    value: email,\n    placeholder: \"name@example.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Please wait...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-actions float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    className: \"btn btn-link text-muted mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nexport default connect()(ForgotPassword);","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/components/profile/forgotPassword/ForgotPassword.js"],"names":["React","useState","Link","connect","axios","ForgotPassword","email","setEmail","error","setError","loading","setLoading","success","setSuccess","onChange","e","target","value","onSubmit","preventDefault","res","post","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport axios from 'axios';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const onChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError();\n\n    if (email === '') {\n      setLoading(false);\n      return setError('Please enter a valid email.');\n    } else {\n      try {\n        const res = await axios.post('http://localhost:3000/password/forgot', {\n          email,\n        });\n\n        if (res.data === 'no user found') {\n          setLoading(false);\n          setError('An account was not found with the provided email.');\n        } else if (res.data === 'recovery email sent') {\n          setLoading(false);\n          setSuccess(true);\n        }\n      } catch (error) {\n        setLoading(false);\n        console.log(error.data);\n      }\n    }\n  };\n\n  return (\n    <div className='login-form'>\n      <h1>\n        <i className='fas fa-unlock'></i> Reset your password{' '}\n      </h1>\n      <hr />\n      {success ? (\n        <p>\n          Please check your email for further instructions on how to reset your\n          password. If you don't see it, check your Spam folder.\n        </p>\n      ) : (\n        <form onSubmit={onSubmit} className='mb-2'>\n          <div className='form-group'>\n            <label>\n              We will send you an email with instructions on how to reset your\n              password.\n            </label>\n\n            <input\n              type='email'\n              className='form-control mb-2'\n              name='email'\n              onChange={onChange}\n              value={email}\n              placeholder='name@example.com'\n            />\n            {error && <p className='text-danger'>{error}</p>}\n            {loading && <p>Please wait...</p>}\n          </div>\n\n          <div className='form-actions float-right'>\n            <Link to='/login' className='btn btn-link text-muted mr-4'>\n              Back\n            </Link>\n            <button type='submit' className='btn btn-primary mb-1'>\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default connect()(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}