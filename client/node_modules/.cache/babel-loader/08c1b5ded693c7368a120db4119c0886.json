{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Projects/beer-cooler-merged/client/src/components/ProductPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getProductById } from '../actions/products-action';\nimport { coolerAddProduct } from '../actions/cooler-action';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport Spinner from './layout/Spinner';\nexport const ProductPage = ({\n  isAuthenticated,\n  getProductById,\n  coolerAddProduct,\n  match,\n  item,\n  loading\n}) => {\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    getProductById(parseInt(match.params.id));\n  }, [getProductById, match.params.id]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const addToCoolerHandler = e => {\n    e.preventDefault();\n    coolerAddProduct(item, parseInt(quantity), isAuthenticated);\n    setQuantity(1);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), item && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card product-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-subtitle mb-2 text-muted font-weight-light font-italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, item.tagline), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, item.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, item.brewers_tips), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"First Brewed \", item.first_brewed), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, item.abv, \" ABV\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, item.ibu, \" IBU\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Food Pairings:\", /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, item.food_pairing.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, item))))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-5 input-group input-group-lg\",\n    onSubmit: addToCoolerHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: quantity,\n    min: 1,\n    onChange: e => setQuantity(e.target.value),\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    value: \"Add to Cooler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => ({\n  item: state.products.selectedProduct,\n  loading: state.products.loading,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getProductById,\n  coolerAddProduct\n})(ProductPage);","map":{"version":3,"sources":["/Users/andy/Projects/beer-cooler-merged/client/src/components/ProductPage.js"],"names":["React","useState","useEffect","connect","getProductById","coolerAddProduct","Breadcrumb","Spinner","ProductPage","isAuthenticated","match","item","loading","quantity","setQuantity","parseInt","params","id","addToCoolerHandler","e","preventDefault","image_url","name","tagline","description","brewers_tips","first_brewed","abv","ibu","food_pairing","map","index","target","value","mapStateToProps","state","products","selectedProduct","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getProductById } from '../actions/products-action';\nimport { coolerAddProduct } from '../actions/cooler-action';\nimport Breadcrumb from '../components/layout/Breadcrumb';\nimport Spinner from './layout/Spinner';\n\nexport const ProductPage = ({\n  isAuthenticated,\n  getProductById,\n  coolerAddProduct,\n  match,\n  item,\n  loading,\n}) => {\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    getProductById(parseInt(match.params.id));\n  }, [getProductById, match.params.id]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const addToCoolerHandler = (e) => {\n    e.preventDefault();\n    coolerAddProduct(item, parseInt(quantity), isAuthenticated);\n    setQuantity(1);\n  };\n\n  return (\n    <>\n      <Breadcrumb />\n      {item && (\n        <section className='card product-page'>\n          <img src={item.image_url} alt={item.name} />\n          <div>\n            {' '}\n            <h1 className='card-title'>{item.name}</h1>\n            <h6 className='card-subtitle mb-2 text-muted font-weight-light font-italic'>\n              {item.tagline}\n            </h6>\n            <p className='mt-5'>{item.description}</p>\n            <p>{item.brewers_tips}</p>\n            <ul className='list-group list-group-flush'>\n              <li className='list-group-item'>\n                First Brewed {item.first_brewed}\n              </li>\n              <li className='list-group-item'>{item.abv} ABV</li>\n              <li className='list-group-item'>{item.ibu} IBU</li>\n              <li className='list-group-item'>\n                Food Pairings:\n                <ul className='list-group list-group'>\n                  {item.food_pairing.map((item, index) => (\n                    <li className='list-group-item' key={index}>\n                      {item}\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n            <form\n              className='mt-5 input-group input-group-lg'\n              onSubmit={addToCoolerHandler}\n            >\n              <div className='form-row'>\n                <div className='col'>\n                  <input\n                    value={quantity}\n                    min={1}\n                    onChange={(e) => setQuantity(e.target.value)}\n                    type='number'\n                    className='form-control'\n                    placeholder='Quantity'\n                  />\n                </div>\n                <div className='col'>\n                  <input\n                    className='btn btn-primary'\n                    type='submit'\n                    value='Add to Cooler'\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  item: state.products.selectedProduct,\n  loading: state.products.loading,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { getProductById, coolerAddProduct })(\n  ProductPage\n);\n"]},"metadata":{},"sourceType":"module"}